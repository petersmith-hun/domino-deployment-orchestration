version: 2.1

orbs:
  node: circleci/node@5.0.2

# Reusable commands
commands:

  # Command definition for publishing GitHub releases/tags
  github_release:
    parameters:
      release-type:
        type: enum
        default: "rc"
        enum: ["rc", "release"]
    steps:
      - attach_workspace:
          at: /tmp/ws_store
      - run:
          name: "Publish Release on GitHub"
          command: |
            [[ "<< parameters.release-type >>" = "release" ]] && VERSION_QUALIFIER="-release" || VERSION_QUALIFIER=""
            VERSION=v$(cat /tmp/ws_store/version)$VERSION_QUALIFIER
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} /tmp/ws_store/domino_release.tar.gz

jobs:

  build-and-package:
    executor:
      name: node/default
      tag: '16'
    steps:
      - checkout
      - run:
          name: "Create logs directory before test execution"
          command: mkdir logs
      - node/install-packages:
          override-ci-command: npm install
      - run:
          name: "Execute Domino tests"
          command: npm test
      - run:
          name: "Package and prepare executable"
          command: |
            chmod u+x build/build.sh
            ./build/build.sh
            mkdir /tmp/ws_store
            cp build/target/domino_release.tar.gz /tmp/ws_store/domino_release.tar.gz
      - run:
          name: "Extract version number"
          command: |
            VERSION=$(cat package.json | grep version | head -n 1 | sed -E "s/.*([0-9]+\.[0-9]+\.[0-9]+).*/\1/")
            echo "Extracted version $VERSION"
            echo $VERSION >> /tmp/ws_store/version
      - persist_to_workspace:
          root: /tmp/ws_store
          paths:
            - domino_release.tar.gz
            - version

  publish-github-release:
    docker:
      - image: cibuilds/github:0.10
    steps:
      - github_release:
          release-type: release

workflows:
  domino-release:
    jobs:

      - build-and-package:
          filters:
            branches:
              only:
                - deploy

      - release-approval:
          type: approval
          requires:
            - build-and-package

      - publish-github-release:
          context: leaflet_ci
          requires:
            - release-approval

